swagger: '2.0'
info:
  version: ''
  title: ''
host: 127.0.0.1:8001
definitions:
  ProfileData:
    required:
    - _pPlayerNumber
    - _pPlayerSettings
    - _pLastUpload
    - _pIsAdmin
    type: object
    properties:
      _pPlayerNumber:
        maximum: 9223372036854775807
        minimum: -9223372036854775808
        type: integer
      _pIsAdmin:
        type: boolean
      _pLastRule:
        items:
        - $ref: ! '#/definitions/RuleTemplate'
        - type: string
        type: array
      _pLastUpload:
        $ref: ! '#/definitions/LastUpload'
      _pPlayerSettings:
        $ref: ! '#/definitions/PlayerSettings'
  PlayerSettings:
    required:
    - _pPlayerName
    - _mailNewInput
    - _mailSubmitRule
    - _mailNewOutput
    - _mailConfirmed
    type: object
    properties:
      _mailNewInput:
        type: boolean
      _mailSubmitRule:
        type: boolean
      _mailNewOutput:
        type: boolean
      _pPlayerName:
        type: string
      _mailConfirmed:
        type: boolean
      _mail:
        type: string
  LastUpload:
    minProperties: 1
    maxProperties: 1
    type: object
    properties:
      UploadSuccess:
        type: string
        enum:
        - UploadSuccess
      NoUpload:
        type: string
        enum:
        - NoUpload
      UploadFailure:
        items:
        - type: string
        - type: string
        type: array
  Module:
    required:
    - _modPath
    - _modContent
    type: object
    properties:
      _modContent:
        type: string
      _modPath:
        type: string
  RuleTemplate:
    required:
    - _rName
    - _rDescription
    - _rRuleCode
    - _rAuthor
    - _rCategory
    - _rDeclarations
    type: object
    properties:
      _rName:
        type: string
      _rAuthor:
        type: string
      _rDescription:
        type: string
      _rRuleCode:
        type: string
      _rCategory:
        items:
          type: string
        type: array
      _rDeclarations:
        items:
          $ref: ! '#/definitions/Module'
        type: array
      _rPicture:
        type: string
paths:
  /templates:
    post:
      consumes:
      - application/json
      responses:
        400:
          description: Invalid `body`
        204:
          description: ''
      produces:
      - application/json
      parameters:
      - required: true
        schema:
          $ref: ! '#/definitions/RuleTemplate'
        in: body
        name: body
    get:
      responses:
        200:
          schema:
            items:
              $ref: ! '#/definitions/RuleTemplate'
            type: array
          description: ''
      produces:
      - application/json
    put:
      consumes:
      - application/json
      responses:
        400:
          description: Invalid `body`
        204:
          description: ''
      produces:
      - application/json
      parameters:
      - required: true
        schema:
          items:
            $ref: ! '#/definitions/RuleTemplate'
          type: array
        in: body
        name: body
  /players/{id}:
    get:
      responses:
        404:
          description: ! '`id` not found'
        200:
          schema:
            $ref: ! '#/definitions/ProfileData'
          description: ''
      produces:
      - application/json
      parameters:
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer
    delete:
      responses:
        404:
          description: ! '`id` not found'
        204:
          description: ''
      produces:
      - application/json
      parameters:
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer
  /players:
    post:
      consumes:
      - application/json
      responses:
        400:
          description: Invalid `body`
        201:
          schema:
            $ref: ! '#/definitions/ProfileData'
          description: ''
      produces:
      - application/json
      parameters:
      - required: true
        schema:
          $ref: ! '#/definitions/PlayerSettings'
        in: body
        name: body
    get:
      responses:
        200:
          schema:
            items:
              $ref: ! '#/definitions/ProfileData'
            type: array
          description: ''
      produces:
      - application/json

